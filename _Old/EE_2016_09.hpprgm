// JMB - Setembre 2016

#pragma mode( separator(.,;) integer(h32) )

EXPORT kcmil→mm2(kcmil)
// kcmil:secció en kcmil → secció en mm²
BEGIN
  kcmil*0.506707479098;
END;

EXPORT mm2→kcmil(mm2)
// mm2:secció en mm² → secció en kcmil
BEGIN
  mm2/0.506707479098;
END;

EXPORT AWG→mm2(AWG)
// AWG:número AWG → secció en mm²
// Cal entrar 0, -1, -2 i -3 per els números AWG 1/0, 2/0, 3/0 i 4/0
BEGIN
  53.4751207321/(92^(AWG/19.5));
END;

EXPORT mm2→AWG(mm2)
// mm2:secció en mm² → número AWG més proper
// Els resultats 0, -1, -2 i -3 equivalen a AWG 1/0, 2/0, 3/0 i 4/0
BEGIN
  ROUND(4.31245284200*LN(53.4751207321/mm2),0);
END;

EXPORT D→Y(zd)
// zd:impedàncies [Zab,Zbc,Zca] → impedàncies [Zan,Zbn,Zcn]
BEGIN
  LOCAL z:=ΠLIST(zd)/ΣLIST(zd);
  [z/zd(2),z/zd(3),z/zd(1)];
END;

EXPORT Y→D(zy)
// zy:impedàncies [Zan,Zbn,Zcn] → impedàncies [Zab,Zbc,Zca]
BEGIN
  LOCAL z:=zy(1)*(zy(2)+zy(3))+zy(2)*zy(3);
  [z/zy(3),z/zy(1),z/zy(2)];
END;

EXPORT EZS→U(E,Z,S)
// E:Font de tensió, Z:impedància, S:potència → U:tensió
BEGIN
  LOCAL ReUe,ImUe,ZcS;
  ZcS:=CONJ(Z)*S;
  ImUe:=IM(ZcS)/ABS(E);
  ReUe:=POLYROOT({1,−ABS(E),RE(ZcS)+ImUe^2});  
  IF TYPE(ReUe(1))==3 THEN
    "No hi ha solució"; // Arrels complexes
  ELSE
    (MAX(ReUe),ImUe)*SIGN(E);
  END;
END;

EXPORT Millman(u,z)
// u:tensions [Uax,Ubx,Ucx,...], z:impedàncies [Zan,Zbn,Zcn,...] → tensió Unx 
BEGIN
  ΣLIST(u ./ z)/ΣLIST(z .^ (−1));
END;

EXPORT Triangle→Fasors(v)
//v:triangle de tensions [Uab,Ubc,Uca] → fasors de tensió [Uab,Ubc,Uca]
//La tensió Uab es pren com a fasor de referència (angle zero)
BEGIN
  LOCAL φ,mode_AAngle;
  mode_AAngle:=AAngle;
  AAngle:=1; // Radiants
  φ:=Triangle_Solver.SSS(v(1),v(3),v(2));
  AAngle:=mode_AAngle;
  [v(1),v(2)*exp(*(π+φ(2))),v(3)*exp(*(π-φ(3)))];
END;

EXPORT FN→FF(v)
// v:tensions fase-neutre [Uan,Ubn,Ucn] → tensions fase-fase [Uab,Ubc,Uca]
BEGIN
  [v(1)-v(2),v(2)-v(3),v(3)-v(1)];
END;

EXPORT FF→FG(v)
// v:tensions fase-fase [Uab,Ubc,Uca] → tensions fase-G [Uag,Ubg,Ucg]
// G és el baricentre del triangle de tensions fase-fase
BEGIN
  [v(1),0,-v(2)] .- (v(1)-v(2))/3;
END;

EXPORT ABC→A012(v)
// v:fasors [A,B,C] → fasors de seqüència [A0,A1,A2]
BEGIN
  LOCAL a:=(-1/2,√3/2);
  [[1,1,1],[1,a,a^2],[1,a^2,a]]*v/3;
END;

EXPORT A012→ABC(v)
// v:fasors de seqüència [A0,A1,A2] → fasors [A,B,C]
BEGIN
  LOCAL a:=(-1/2,√3/2);
  [[1,1,1],[1,a^2,a],[1,a,a^2]]*v;
END;

EXPORT AN12→AB12(v)
// v:fasors de seqüència fase-neutre [AN1,AN2] → fasors de seqüència fase-fase [AB1,AB2]
BEGIN
  √3*[v(1)*exp(π*/6),v(2)*exp(-π*/6)];
END;

EXPORT AB12→AN12(v)
// v:fasors de seqüència fase-fase [AB1,AB2] → fasors de seqüència fase-neutre [AN1,AN2]
BEGIN
  [v(1)/exp(π*/6),v(2)/exp(-π*/6)]/√3;
END;

